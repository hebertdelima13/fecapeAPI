{
  "openapi": "3.0.3",
  "info": {
    "title": "Fecape API",
    "description": "API for the Fecape (Federação capixaba de pesca e lançamento) web system.",
    "contact": {
      "email": "hebertdelima13@gmail.com"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Route for user registration and authentication"
    },
    {
      "name": "User",
      "description": "Route to list, update and delete users"
    },
    {
      "name": "Club",
      "description": "Route to list, update and delete clubs"
    },
    {
      "name": "Athlete",
      "description": "Route to list, update and delete athletes"
    },
    {
      "name": "Championship",
      "description": "Route to list, update and delete championships"
    },
    {
      "name": "Result",
      "description": "Route to list, update and delete results"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Registration of a user",
        "description": "Route for registering a user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Registering a user in the system",
          "content": {
            "application/json": {
              "schema": { "$ref": "#components/schemas/RequestRegister" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation!",
            "content": {
              "application/json": {
                "schema": { "$ref": "#components/schemas/ResponseRegister" }
              }
            }
          },
          "400": {
            "description": "Error!"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login of a user",
        "description": "Route for user login",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Login of a user to the system",
          "content": {
            "application/json": {
              "schema": { "$ref": "#components/schemas/RequestLogin" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation!",
            "content": {
              "application/json": {
                "schema": { "$ref": "#components/schemas/ResponseLogin" }
              }
            }
          },
          "400": {
            "description": "Error!"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Returns a list of users",
        "description": "Route for listing users",
        "operationId": "listUser",
        "responses": {
          "200": {
            "description": "Users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#components/schemas/User" }
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": ["User"],
        "summary": "Returns a user by id",
        "description": "Route for listing a specific user by id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation!",
            "content": {
              "application/json": {
                "schema": { "$ref": "#components/schemas/User" }
              }
            }
          },
          "400": {
            "description": "Error!"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update an existing user",
        "description": "Update an existing user by Id",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update a user in the system",
          "content": {
            "application/json": {
              "schema": { "$ref": "#components/schemas/RequestRegister" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation!",
            "content": {
              "application/json": {
                "schema": { "$ref": "#components/schemas/User" }
              }
            }
          },
          "400": {
            "description": "Error!"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete an existing user",
        "description": "Delete an existing user by Id",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation!"
          },
          "400": {
            "description": "Error!"
          }
        }
      }
    },
    "/club": {
      "get": {
        "tags": ["Club"],
        "summary": "Returns a list of clubs",
        "description": "Route for listing clubs",
        "operationId": "listClubs",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "club": {
                        "type": "string",
                        "example": "Vila Velha"
                      },
                      "athletes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "name": {
                              "type": "string",
                              "example": "Marcus Corrêa de Lima"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Club"]
      }
    },
    "/club/{clubId}": {
      "get": {
        "tags": ["Club"],
        "summary": "Returns a club by id",
        "description": "Route for listing a specific club by id",
        "operationId": "getClubById",
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "description": "Club id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "club": {
                        "type": "string",
                        "example": "Vila Velha"
                      },
                      "athletes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "name": {
                              "type": "string",
                              "example": "Marcus Corrêa de Lima"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error!"
          }
        }
      },
      "put": {
        "tags": ["Club"],
        "summary": "Update an existing club",
        "description": "Update an existing club by Id",
        "operationId": "updateClub",
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "description": "Club id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Update a club in the system",
          "content": {
            "application/json": {
              "schema": { "$ref": "#components/schemas/RequestClub" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation!",
            "content": {
              "application/json": {
                "schema": { "$ref": "#components/schemas/ResponseClub" }
              }
            }
          },
          "400": {
            "description": "Error!"
          }
        }
      },
      "delete": {
        "tags": ["Club"],
        "summary": "Delete an existing club",
        "description": "Delete an existing club by Id",
        "operationId": "deleteClub",
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "description": "Club id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation!"
          },
          "400": {
            "description": "Error!"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RequestRegister": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "email": {
            "type": "string",
            "example": "loremipsum@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "loremipsum"
          }
        }
      },
      "ResponseRegister": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "email": {
            "type": "string",
            "example": "loremipsum@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "loremipsum"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "RequestLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "loremipsum@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "loremipsum"
          }
        }
      },
      "ResponseLogin": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#components/schemas/User"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA2ZTRhZDA4LWYzMzgtNDU3Yy1iMTFmLTI5NGFiOGIyNDIwOSIsImlhdCI6MTY3MzM3Nzc4MiwiZXhwIjoxNjczNDA2NTgyfQ.Tn8szrO4Rgag_vR5kkata1L2TQpWUgkfFJNZPNiwLjc"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "email": {
            "type": "string",
            "example": "loremipsum@gmail.com"
          }
        }
      },
      "Club": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Vila Velha"
          },
          "athletes": {
            "type": "array",
            "items": { "$ref": "#components/schemas/Athlete" }
          }
        }
      },
      "RequestClub": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Vitória"
          }
        }
      },
      "ResponseClub": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Vitória ES"
          }
        }
      },
      "Athlete": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Marcus Corrêa de Lima"
          },
          "club": {
            "type": "string",
            "example": "Vila Velha"
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#components/schemas/Result" }
          }
        }
      }
    }
  }
}
